// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Vehicle {
    id            String           @id @default(cuid())
    createdAt     DateTime         @default(now())
    updatedAt     DateTime         @updatedAt
    name          String
    price         Int
    imageUrl      String
    engine        EngineType
    transmission  TransmissionType
    brakes        BrakesType
    suspension    SuspensionType
    tyres         TyresType
    turbine       Boolean
    airSuspension Boolean
    armor         Boolean
    xenon         Boolean
    radio         Boolean
    sold          Boolean
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

enum EngineType {
    V8
    V10
    V12
}

enum TransmissionType {
    Level1
    Level2
    Level3
}

enum BrakesType {
    Performance
    GT
    Competition
}

enum SuspensionType {
    Low
    Street
    Race
    Rally
}

enum TyresType {
    Standard
    Bulletproof
    Drift
}
